/*
 * dabih-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Permission : The Permission type is used to represent the permissions a user has on a Inode. NONE: No permissions READ: user may only read the file or directory WRITE: user can read, share, edit, and delete the file or directory
/// The Permission type is used to represent the permissions a user has on a Inode. NONE: No permissions READ: user may only read the file or directory WRITE: user can read, share, edit, and delete the file or directory
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Permission {
    #[serde(rename = "0")]
    Variant0,
    #[serde(rename = "1")]
    Variant1,
    #[serde(rename = "2")]
    Variant2,

}

impl std::fmt::Display for Permission {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Variant0 => write!(f, "0"),
            Self::Variant1 => write!(f, "1"),
            Self::Variant2 => write!(f, "2"),
        }
    }
}

impl Default for Permission {
    fn default() -> Permission {
        Self::Variant0
    }
}

