/*
 * dabih-api
 *
 * Dabih API Server
 *
 * The version of the OpenAPI document: 2.1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TokenAddBody {
    /// The array of scopes the token should have
    #[serde(rename = "scopes")]
    pub scopes: Vec<String>,
    /// The time in seconds the token should be valid for If null the token will never expire
    #[serde(rename = "lifetime", deserialize_with = "Option::deserialize")]
    pub lifetime: Option<u64>,
}

impl TokenAddBody {
    pub fn new(scopes: Vec<String>, lifetime: Option<u64>) -> TokenAddBody {
        TokenAddBody {
            scopes,
            lifetime,
        }
    }
}

