name: Publish Crates.io cli crate

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        os:
          - { runner: ubuntu-latest, name: linux, target: x86_64-unknown-linux-gnu, shell: bash }
          - { runner: macos-latest, name: macos, target: x86_64-apple-darwin, shell: bash}
          - { runner: macos-latest, name: arm_macos, target: aarch64-apple-darwin, shell: bash }
          - { runner: windows-latest, name: windows, target: x86_64-pc-windows-gnu, shell: msys2 }

    runs-on: ${{ matrix.os.runner }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{matrix.os.target}}

    - name: Setup MSYS2 on Windows
      if: matrix.runner == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        msystem: UCRT64


    - name: Build CLI for ${{ matrix.os.target }}
      shell: ${{ matrix.os.shell }}
      run: cargo build --manifest-path cli/Cargo.toml --release --target ${{ matrix.os.target }}

    - name: Archive Artifact
      run: |
        cd cli
        if [[ "${{ matrix.os.name }}" == "windows" ]]; then
          7z a -tzip dabih_${{ matrix.os.name }}.zip target/${{ matrix.os.target }}/release/dabih.exe
        else
          tar czf dabih_${{ matrix.os }}.tar.gz -C target/${{ matrix.os.target }}/release .
        fi
        cd -

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: cli/dabih_${{ matrix.os.name }}.zip

    - name: Publish Release ID
      run: echo "RELEASE_ID_${{ matrix.os.name}}=${{ steps.create_release.outputs.id }}" >> $GITHUB_ENV

  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo publish
        working-directory: ./cli
        run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
