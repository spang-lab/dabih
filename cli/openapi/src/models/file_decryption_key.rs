/*
 * dabih-api
 *
 * Dabih API Server
 *
 * The version of the OpenAPI document: 2.0.8
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FileDecryptionKey {
    /// mnemonics are human readable unique identifiers for datasets mnemonics have the form <random adjective>_<random first name>
    #[serde(rename = "mnemonic")]
    pub mnemonic: String,
    /// The AES-256 encryption key used to encrypt and decrypt datasets. base64url encoded
    #[serde(rename = "key")]
    pub key: String,
}

impl FileDecryptionKey {
    pub fn new(mnemonic: String, key: String) -> FileDecryptionKey {
        FileDecryptionKey {
            mnemonic,
            key,
        }
    }
}

