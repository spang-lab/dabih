/*
 * dabih-api
 *
 * Dabih API Server
 *
 * The version of the OpenAPI document: 2.1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MemberAddBody {
    /// The users to add to the dataset
    #[serde(rename = "subs")]
    pub subs: Vec<String>,
    /// The list of AES-256 keys required to decrypt all child datasets
    #[serde(rename = "keys")]
    pub keys: Vec<models::FileDecryptionKey>,
}

impl MemberAddBody {
    pub fn new(subs: Vec<String>, keys: Vec<models::FileDecryptionKey>) -> MemberAddBody {
        MemberAddBody {
            subs,
            keys,
        }
    }
}

