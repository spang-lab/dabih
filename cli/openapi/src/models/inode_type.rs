/*
 * dabih-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// InodeType : InodeType is used to represent the type of an Inode. FILE: a file DIRECTORY: a directory UPLOAD: a file that is being uploaded TRASH: the special directory that holds deleted files ROOT: the global root directory HOME: the user's home directory USERS: the directory that holds all user directories
/// InodeType is used to represent the type of an Inode. FILE: a file DIRECTORY: a directory UPLOAD: a file that is being uploaded TRASH: the special directory that holds deleted files ROOT: the global root directory HOME: the user's home directory USERS: the directory that holds all user directories
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InodeType {
    #[serde(rename = "0")]
    Variant0,
    #[serde(rename = "1")]
    Variant1,
    #[serde(rename = "2")]
    Variant2,
    #[serde(rename = "10")]
    Variant10,
    #[serde(rename = "11")]
    Variant11,
    #[serde(rename = "12")]
    Variant12,

}

impl std::fmt::Display for InodeType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Variant0 => write!(f, "0"),
            Self::Variant1 => write!(f, "1"),
            Self::Variant2 => write!(f, "2"),
            Self::Variant10 => write!(f, "10"),
            Self::Variant11 => write!(f, "11"),
            Self::Variant12 => write!(f, "12"),
        }
    }
}

impl Default for InodeType {
    fn default() -> InodeType {
        Self::Variant0
    }
}

