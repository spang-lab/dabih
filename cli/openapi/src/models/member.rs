/*
 * dabih-api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Member {
    /// The database id of the member
    #[serde(rename = "id", deserialize_with = "Option::deserialize")]
    pub id: Option<serde_json::Value>,
    #[serde(rename = "sub")]
    pub sub: String,
    /// The database id of the inode
    #[serde(rename = "inodeId", deserialize_with = "Option::deserialize")]
    pub inode_id: Option<serde_json::Value>,
    #[serde(rename = "permission")]
    pub permission: models::Permission,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
}

impl Member {
    pub fn new(id: Option<serde_json::Value>, sub: String, inode_id: Option<serde_json::Value>, permission: models::Permission, created_at: String, updated_at: String) -> Member {
        Member {
            id,
            sub,
            inode_id,
            permission,
            created_at,
            updated_at,
        }
    }
}

