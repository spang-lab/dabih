/*
 * dabih-api
 *
 * Dabih API Server
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// User : User is the type that represents a user in the system.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    /// The subject of the user, a unique identifier
    #[serde(rename = "sub")]
    pub sub: String,
    /// The scopes the user has
    #[serde(rename = "scopes")]
    pub scopes: Vec<String>,
    /// Does the user have the dabih:admin scope
    #[serde(rename = "isAdmin")]
    pub is_admin: bool,
}

impl User {
    /// User is the type that represents a user in the system.
    pub fn new(sub: String, scopes: Vec<String>, is_admin: bool) -> User {
        User {
            sub,
            scopes,
            is_admin,
        }
    }
}

