// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  sub       String      @unique
  name      String
  email     String
  keys      PublicKey[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model PublicKey {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  hash      String
  data      String
  isRootKey Boolean
  enabled   DateTime?
  enabledBy String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([userId, hash])
}

model Dataset {
  id        Int       @id @default(autoincrement())
  mnemonic  String    @unique
  fileName  String
  createdBy String
  keyHash   String
  name      String?
  path      String?
  hash      String?
  size      Int?
  chunks    Chunk[]
  members   Member[]
  keys      Key[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Chunk {
  id        Int       @id @default(autoincrement())
  dataset   Dataset   @relation(fields: [datasetId], references: [id])
  datasetId Int
  hash      String
  iv        String
  start     Int
  end       Int
  size      Int
  crc       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Member {
  id         Int       @id @default(autoincrement())
  sub        String
  dataset    Dataset   @relation(fields: [datasetId], references: [id])
  datasetId  Int
  permission Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
}

model Key {
  id            Int       @id @default(autoincrement())
  dataset       Dataset   @relation(fields: [datasetId], references: [id])
  datasetId     Int
  publicKeyHash String
  key           String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
}

model Token {
  id        Int       @id @default(autoincrement())
  value     String    @unique
  sub       String
  scope     String
  exp       DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
